<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!-- 각 화면 개발시 Tag 복사해서 붙여넣고 사용할것 -->    
<%@ taglib prefix="c"		uri="http://java.sun.com/jsp/jstl/core"			%>
<%@ taglib prefix="e3ps" 	uri="/WEB-INF/tlds/e3ps-functions.tld"%>
<div class="seach_arm2 pt10 pb5">
	<div class="leftbt">
		<span class="title"><img class="pointer" onclick="switchPopupDiv(this);" src="/Windchill/jsp/portal/images/minus_icon.png">BOM</span>
		<input style="width:120px" type="text" id="searchBOMPartNo" name="searchBOMPartNo">
		<button type="button" class="s_bt03" onclick="javascript:bomTree_search();">${e3ps:getMessage('검색')}</button>
	</div>
	<div class="rightbt">
		<select id="desc" name="desc" style="width:70px;" onchange="javascript:bomTree_getGridData()">
			<option value="true">${e3ps:getMessage('정전개')}</option>
			<option value="false">${e3ps:getMessage('역전개')}</option>
		</select>
		<select id="initLevel" name="initLevel" style="width:70px;" onchange="javascript:bomTree_getGridData();">
			<option value="1">1 Level</option>
			<option value="2">2 Level</option>
			<option value="3">3 Level</option>
			<option value="4">4 Level</option>
			<option value="ALL">ALL</option>
		</select>
		<select id="openLevel" name="openLevel" style="width:130px;" onchange="javascript:showItemsOnLevel(this.value);">
		</select>
		<%-- <button type="button" class="s_bt03" onclick="bomTree_resetFilter();">${e3ps:getMessage('필터 초기화')}</button> --%>
		<button type="button" class="s_bt03" onclick="bomExcelDown('${oid}');">${e3ps:getMessage('엑셀 다운로드')}</button>
		<!-- <button type="button" class="s_bt03" onclick="bomTree_xlsxExport();">${e3ps:getMessage('엑셀 다운로드')}</button>  -->
		<!-- <img class="pointer mb5" title="${e3ps:getMessage('일괄 등록 양식으로 BOM 다운로드')}" onclick="bomExcelDown('${oid}');" src="/Windchill/jsp/portal/icon/fileicon/xls.gif" border="0">  -->
	</div>
</div>
<div class="list" id="bomTree_grid_wrap">
</div>
<script>
if (!webix.env.touch && webix.env.scrollSize)
	  webix.CustomScroll.init();
	  
webix.ready(function(){
	
	var bomTree = webix.ui({
		view : "treetable",
		container : "bomTree_grid_wrap",
		id : "bomTree_grid_wrap",
		select : "row",
		multiselect : true,
		scroll : "y",
		scrollAlignY:true,
		tooltip: true,
		resizeColumn:true,
		yCount: 13,
		columns:[
			{ id:"number",	header:"${e3ps:getMessage('부품 번호')}",	fillspace:1,
				css:"custom_webix_ellipsis",
				template:"{common.treetable()}#number#",
				tooltip:function(data){
					return data.number;
				}
			},
			{ id:"name",	header:"${e3ps:getMessage('부품 명')}", 	fillspace:2,	
				css:"custom_webix_ellipsis",
				template:function(obj){
					return "<a href='javascript:openView(\"" + obj.oid+ "\")'>" + obj.name + "</a>"
				}	
			},
			{ id:"rev",	header:"${e3ps:getMessage('버전')}", 	width:60,
				css:"custom_webix_ellipsis custom_webix_center",
			},
			{ id:"level",	header:"level", 	width:50,
				css:"custom_webix_ellipsis custom_webix_center",
			},
			{ id:"info",	header:"", 	width:40, tooltip:false,
				css:"custom_webix_imgCenter",
				template:function(obj, common, value, col, index){
					return "<img class='pointer' src='/Windchill/netmarkets/images/details.gif' onclick='javascript:openBomTree(\"" + obj.oid + "\");'>";
				}
			},
			{ id:"thumbnail",	header:"", 	width:40, tooltip:false,
				css:"custom_webix_imgCenter pointer",
				template:custom_webix_thumbnailTemplate	
			},
			{ id:"quantity",	header:"${e3ps:getMessage('수량')}", 	width:60,
				css:"custom_webix_ellipsis custom_webix_center",
			},
			{ id:"stateName",	header:"${e3ps:getMessage('상태')}", 	width:80, sort:"server",
				css: "custom_webix_ellipsis custom_webix_center",		
			},
			{ id:"unit",	header:"${e3ps:getMessage('단위')}", 	width:60,
				css: "custom_webix_ellipsis custom_webix_center",		
			},
			{ id:"material",	header:"${e3ps:getMessage('재질')}", 	width:100, sort:"server",
				css: "custom_webix_ellipsis custom_webix_center",		
			},
			{ id:"treatment",	header:"${e3ps:getMessage('후처리')}", 	width:100,  sort:"server",
				css: "custom_webix_ellipsis custom_webix_center",		
			},
			{ id:"category",	header:"${e3ps:getMessage('분류')}", 	width:100,
				css: "custom_webix_ellipsis custom_webix_center",		
			},
			{ id:"assembleType",	header:"${e3ps:getMessage('조립 구분')}", 	width:100, sort:"server",
				css: "custom_webix_ellipsis custom_webix_center",		
			},
			/* { id:"customer_part_number",	header:"${e3ps:getMessage('고객품번')}", 	width:100,
				css: "custom_webix_ellipsis custom_webix_center",		
			},
			{ id:"unit_cost",	header:"${e3ps:getMessage('단가')}", 	width:100,
				css: "custom_webix_ellipsis custom_webix_center",		
			},
			{ id:"prod_company_name",	header:"${e3ps:getMessage('양산업체명')}", 	width:100,
				css: "custom_webix_ellipsis custom_webix_center",		
			}, */
		],
		
		type:{
		    folder:function(obj){
				var img = obj.img;
				
				var imgSrc = "/Windchill/wtcore/images/part.gif";
	
				if(obj.checkoutState == "c/o" || obj.checkoutState == "wrk") {
					if(obj.ownerCheckout){
						imgSrc = "/Windchill/jsp/portal/images/icon_1.gif"; //자신이 체크아웃 함
					}else{
						imgSrc = "/Windchill/jsp/portal/images/icon_2.gif"; //타인이 체크아웃 함 
					}
				}
				
				return "<img src='" + imgSrc + "' style='float:left; margin:10px 5px 10px 5px;'>";
		    }
		},
		on: {
	        onDataRequest: bomTree_loadChildren,
	        onItemClick: bomTree_itemClick,
		}
	});
	
	webix.event(window, "resize", function(){ bomTree.adjust(); });
	 
	webix.extend($$("bomTree_grid_wrap"), webix.ProgressBar);

	bomTree_getGridData();
});

$(document).ready(function(){
	$("#searchBOMPartNo").keypress(function(e){
		if(e.keyCode==13){
			bomTree_search();
		}
	})
});

function bomTree_getGridData(){
	
	var param = new Object();
	
	param.oid = "${oid}";
	param.desc = $("#desc").val();
	param.initLevel = $("#initLevel").val();
	
	$$("bomTree_grid_wrap").clearAll();
	$$("bomTree_grid_wrap").showProgress();
	var url = getURLString("/bom/getBomRoot");
	
	ajaxCallServer(url, param, function(data){

		// 그리드 데이터
		var gridData = data.list;
		if(gridData[0].children !== null && gridData[0].children.length > 0) {
			gridData[0].webix_kids = true;
		}
		
		// 그리드에 데이터 세팅
		$$("bomTree_grid_wrap").parse(gridData);
		
		bomTree_parseChildrenData(gridData[0]);
		
		var initLevel = $("#initLevel").val();
		
		// 그리드 오픈
		showItemsOnLevel(initLevel);
		
		$$("bomTree_grid_wrap").hideProgress();
		
		$("#openLevel option").remove();
		
		if($("#initLevel").val() == "ALL") {
			maxLevel = 4;
		} else {
			maxLevel = initLevel;
		}
		
		for(var i=1; i <= maxLevel; i++) {
			var selected = "";
			if(i == initLevel) {
				selected = "selected";
			}
			$("#openLevel").append($("<option>", { 
				value: i,
				text : i + "레벨까지 보이기",
				selected : selected
			}));
		}
		
		if($("#initLevel").val() == "ALL") {
			$("#openLevel").append($("<option>", { 
				value: "ALL",
				text : "ALL",
				selected : "selected"
			}));
		}
	},true);
}

function bomTree_parseChildrenData(parentItem) {

	var parent = parentItem.id;
	var childrenItemList = parentItem.children;
	var childrenList = new Array();
	
	if(childrenItemList != null){
		childrenList = parentItem.children.slice();
	}
	
	childrenList = childrenList.map(function(child) {
		if(child.children !== null) {
			child.webix_kids = true;
		}
		
		return child;
	});
	
	const children = {
   		parent : parent,
   		data : childrenList
   	};
	
	$$("bomTree_grid_wrap").parse(children);
	for(var i=0; i < childrenList.length; i++) {
		var child = childrenList[i];
		if(child.children !== null && child.children.length > 0) {
			bomTree_parseChildrenData(child)
		}
	}
}

//bomTree 
function bomTree_loadChildren(id) {
	
	let item = $$("bomTree_grid_wrap").getItem(id);
	
	var oid = item.oid;
	var level = item.level;
	var treeId = item.treeId;
	
	// 자식 데이터 요청
	var param = new Object();
	
	param.oid = oid;
	param.level = level;
	param.treeId = treeId;
	param.desc = $("#desc").val();
	
	$$("bomTree_grid_wrap").showProgress();
	var url = getURLString("/bomEditor/getBomChildren");
	ajaxCallServer(url, param, function(data){
		// 그리드 데이터
		var childrenList = data.list;

		//child.children === null  ::: children 없음
		//child.children !== null(list length 0) ::: children 있음
		childrenList = childrenList.map(function(child) {
			if(child.children !== null) {
				child.webix_kids = true;
			}
			
			return child;
		});
		
		// 성공 시 완전한 배열 객체로 삽입하십시오.
		const children = {
    		parent : id,
    		data : childrenList
    	};
		$$("bomTree_grid_wrap").parse(children);
		$$("bomTree_grid_wrap").hideProgress();
	});
}

function bomTree_itemClick(id, event, node) {
	
	let item = $$("bomTree_grid_wrap").getItem(id);
	
	if("thumbnail" == id.column){
		openMiniWVSPopup(item.minPublishURL);
	}
}

function showItemsOnLevel(openLevel) {
	// 해당 depth 까지 오픈함
	if(openLevel != "ALL") {
		$$("bomTree_grid_wrap").closeAll();
		
		for(openLevel ; openLevel > -1; openLevel--) {
			$$("bomTree_grid_wrap").filter("#level#",Number(openLevel));
		}
	} else {
		$$("bomTree_grid_wrap").openAll();
	}
};

function bomTree_search() {
	var searchBOMPartNo = $("#searchBOMPartNo").val();

	if(searchBOMPartNo.trim() == "") {
		openNotice("${e3ps:getMessage('검색할 단어를 입력하십시오.')}");
		return;
	}
	
	var bomTree = $$("bomTree_grid_wrap");
	
	bomTree.clearCss("custom_webix_marker", true);
	
	if(searchBOMPartNo){
		searchBOMPartNo = searchBOMPartNo.toLowerCase();
		var res = bomTree.find(function(obj){
			return obj.number.toLowerCase().indexOf(searchBOMPartNo) != -1;
		});
		/* for (var i = 0; i < res.length; i++) {
			bomTree.addCss(res[i].id, "custom_webix_marker", true);
		} */
		var openLevel;
		for (var i = 0; i < res.length; i++) {
			bomTree.addCss(res[i].id, "custom_webix_marker", true);
			if(openLevel != null) {
				if(openLevel < res[i].level) {
					openLevel = res[i].level;
				}
			} else {
				openLevel = res[i].level;
			}
		}
		if(openLevel != null) {
			for(openLevel ; openLevel > -1; openLevel--) {
				$$("bomTree_grid_wrap").filter("#level#",Number(openLevel));
			}
		}
	}
	bomTree.refresh();
}

function ${type}_bom_part_xlsxExport() {
	webix.toExcel($$("bomTree_grid_wrap"), {
		filename: "xlsxExport",
		rawValues:true,
	});
}
</script>